name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    tags:
      - "v*" # Runs on tags like v1.0.0
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Firebase config files (CI)
        run: |
          mkdir -p android/app
          echo '{"project_info":{"project_id":"agroflow-ci"},"client":[{"client_info":{"android_client_info":{"package_name":"com.example.agroflow"}},"api_key":[{"current_key":"dummy"}],"services":{"appinvite_service":{}}}]}' > android/app/google-services.json

          mkdir -p ios/Runner
          echo '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist version="1.0"><dict><key>PROJECT_ID</key><string>agroflow-ci</string><key>BUNDLE_ID</key><string>com.example.agroflow</string><key>API_KEY</key><string>dummy</string></dict></plist>' > ios/Runner/GoogleService-Info.plist

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Verify Flutter installation
        run: flutter doctor -v

      - name: Generate Hive adapters
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Analyze project (allow warnings)
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Check formatting (allow failures)
        run: dart format --output=none --set-exit-if-changed . || true

  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Firebase config files (CI)
        run: |
          mkdir -p android/app
          echo '{"project_info":{"project_id":"agroflow-ci"},"client":[{"client_info":{"android_client_info":{"package_name":"com.example.agroflow"}},"api_key":[{"current_key":"dummy"}],"services":{"appinvite_service":{}}}]}' > android/app/google-services.json

          mkdir -p ios/Runner
          echo '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"><plist version="1.0"><dict><key>PROJECT_ID</key><string>agroflow-ci</string><key>BUNDLE_ID</key><string>com.example.agroflow</string><key>API_KEY</key><string>dummy</string></dict></plist>' > ios/Runner/GoogleService-Info.plist

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Get dependencies
        run: flutter pub get

      - name: Generate Hive adapters
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Build APK
        run: flutter build apk --release --verbose

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
